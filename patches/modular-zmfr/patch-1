diff -ruN orig-1/zmcore.c new/zmcore.c
--- orig-1/zmcore.c	2004-11-12 09:46:42.000000000 -0800
+++ new/zmcore.c	2004-11-12 09:48:48.000000000 -0800
@@ -231,12 +231,8 @@
     printf("in receiveFile\n");
 #endif
     zmcore->goodOffset = 0;
-    extFileSetInfo(zmcore, 
-                   zmcore->zmext,
-                   zmcore->filename, 
-                   zmcore->fileinfo, 
-                   &zmcore->goodOffset, 
-                   &zmcore->skip);
+    zmcore->skip = 0;
+    extFileSetInfo(zmcore, zmcore->zmext);
     if (zmcore->skip)
     {
         sendZSKIP(zmcore);
@@ -1430,10 +1426,12 @@
     int sent;
     unsigned long offset;
     
-    gotfile = extFileGetFile(zmcore, 
-                             zmcore->zmext, 
-                             zmcore->filename, 
-                             &zmcore->filesize);
+    zmcore->filename[0] = '\0';
+    zmcore->filesize = 0;
+    zmcore->filetime = time(NULL);
+    zmcore->filemode = 0644;
+
+    gotfile = extFileGetFile(zmcore, zmcore->zmext);
     while (ALLOK && gotfile)
     {
         zmcore->goodOffset = 0;
@@ -1481,10 +1479,12 @@
         }
         if (ALLOK)
         {
-            gotfile = extFileGetFile(zmcore,
-                                     zmcore->zmext,
-                                     zmcore->filename, 
-                                     &zmcore->filesize);
+            zmcore->filename[0] = '\0';
+            zmcore->filesize = 0;
+            zmcore->filetime = time(NULL);
+            zmcore->filemode = 0644;
+
+            gotfile = extFileGetFile(zmcore, zmcore->zmext);
         }
     }
     return;
diff -ruN orig-1/zmfr.c new/zmfr.c
--- orig-1/zmfr.c	2004-11-12 09:46:42.000000000 -0800
+++ new/zmfr.c	2004-11-12 09:45:25.000000000 -0800
@@ -20,23 +20,28 @@
 #include "zmfr.h"
 #include "pdcomm.h"
 
-void extFileSetInfo(ZMCORE *zmcore,
-                    ZMEXT *zmext,
-                    unsigned char *filename, 
-                    unsigned char *fileinfo,
-                    long *offset,
-                    int *skip)
+/** Opens a file to receive the incoming data.
+ *
+ *  The following zmcore parameters are available as input:
+ *  - filename: the name of the file
+ *  - fileinfo: the zmodem info string for the file
+ *  - filemode: the mode as read from fileinfo
+ *  - filesize: the supposed file size as read from fileinfo
+ *  - filetime: the file modification time as read from fileinfo
+ *
+ *  and you may set the following zmcore parameters to affect the transfer:
+ *  - goodOffset: ?? (defaults to 0)
+ *  - skip: ?? (defaults to 0)
+ */
+void extFileSetInfo(ZMCORE *zmcore, ZMEXT *zmext)
 {
-    unused(fileinfo);
     unused(zmcore);
-    printf("opening file %s\n", filename);
-    zmext->fq = fopen((char *)filename, "wb");
+    printf("opening file %s\n", zmcore->filename);
+    zmext->fq = fopen(zmcore->filename, "wb");
     if (zmext->fq == NULL)
     {
-        printf("failed to open file %s\n", filename);
+        printf("failed to open file %s\n", zmcore->filename);
     }
-    *offset = 0;
-    *skip = 0;
     return;
 }
 
@@ -55,25 +60,35 @@
     return;
 }
 
-int extFileGetFile(ZMCORE *zmcore, 
-                   ZMEXT *zmext, 
-                   unsigned char *buf, 
-                   long *filesize)
+/** Opens a file containing the data to send and reads it attributes.
+ *
+ *  You must set the following parameters in zmcore:
+ *  - filename: the name of the file
+ *
+ *  you should set the following parameters:
+ *  - filesize: the advertised file size (defaults to 0).
+ *
+ *  you may set the following parameters:
+ *  - filemode: the mode (defaults to 0644).
+ *  - filetime: the file modification time (defaults to the current time).
+ *
+ *  Returns: 1, or 0 if there was an error opening the file.
+ */
+int extFileGetFile(ZMCORE *zmcore, ZMEXT *zmext)
 {
     int ret = 0;
 
-    unused(zmcore);    
-    strcpy((char *)buf, zmext->fileList[zmext->fileUpto++]);
-    printf("opening file %s\n", buf);
-    zmext->fq = fopen((char *)buf, "rb");
+    strcpy(zmcore->filename, zmext->fileList[zmext->fileUpto++]);
+    printf("opening file %s\n", zmcore->filename);
+    zmext->fq = fopen(zmcore->filename, "rb");
     if (zmext->fq == NULL)
     {
-        printf("failed to open file %s\n", buf);
+        printf("failed to open file %s\n", zmcore->filename);
     }
     else
     {
         fseek(zmext->fq, 0, SEEK_END);
-        *filesize = ftell(zmext->fq);
+        zmcore->filesize = ftell(zmext->fq);
         rewind(zmext->fq);
         ret = 1;
     }
diff -ruN orig-1/zmfr.h new/zmfr.h
--- orig-1/zmfr.h	2004-11-12 09:46:42.000000000 -0800
+++ new/zmfr.h	2004-11-12 09:39:50.000000000 -0800
@@ -15,18 +15,10 @@
 #include "zmcore.h"
 #include "zmext.h"
 
-void extFileSetInfo(ZMCORE *zmcore,
-                    ZMEXT *zmext,
-                    unsigned char *filename, 
-                    unsigned char *fileinfo,
-                    long *offset,
-                    int *skip);
+void extFileSetInfo(ZMCORE *zmcore, ZMEXT *zmext);
 void extFileWriteData(ZMCORE *zmcore, ZMEXT *zmext, void *buf, size_t bytes);
 void extFileFinish(ZMCORE *zmcore, ZMEXT *zmext);
-int extFileGetFile(ZMCORE *zmcore, 
-                   ZMEXT *zmext,
-                   unsigned char *buf, 
-                   long *filesize);
+int extFileGetFile(ZMCORE *zmcore, ZMEXT *zmext);
 void extFileSetPos(ZMCORE *zmcore, ZMEXT *zmext, long offset);
 int extFileGetData(ZMCORE *zmcore, 
                    ZMEXT *zmext,
