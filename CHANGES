TODO: add option to not truncate any data.  maybe shrink buffer though.
TODO: 	(maybe) add ability to see what rproc copied into the fifo.
TODO: when we read 0 bytes, we know the socket is closed and should quit.
		(what happens when we read 0 bytes from the tty?)
TODO: set up tests
TODO: rzh --up, rzh -u, rzhu, or rzu: move up
TODO: move to tmtest 0.9, 0.8 is dead.
TODO: remove logging code, asserts, strip executable
TODO: log level and verbosity clash.  which one should I use?
		(should combine them, use -v as a substitute for --log-level)


17 Jun 2005:
 * It works well!  It finally works well.

13 Jun 2005:
 * Try forking a new rz process to handle the zmodem transfer.
   (pdpzm works but it is excruciatingly slow).

13 Nov 2004: tagged version 0.2 (r27)
 * Made zmfr.c modular, sent in patches.
 * Added send functionality but it appears very broken.

 5 Nov 2004: tagged version 0.1 (r21)
 * Switched to the pdpzm library because the lrzsz code is amazingly brittle.

15 Jan 2004:
 * First version.  Tried to modify lrzsz's rz command to add this feature.


todo: set all buffers to 1 byte and see if we garble anything
todo: set all buffers to 7 bytes (1 larger than start string) and see if we garble anything

todo: make expandable fifos so masses of memory will guard against deadlock.
	(there doesn't seem to be a need...?)

todo: there is a slight chance of deadlock when we're installing a new task.
	The problem is draining the fifo for the new task.  Instead, we should
	mark the fifo, and give it the new task to install.  Then when the fifo
	has drained down to that point, we'll kick it over to the new task
	automatically.  Right now, fifo_drain is really, really, evil.
	NOTE: this should solve the nested task create / sigchild issue.

TODO: turn off disable timeouts in rz.  Nah, leave em on.  User can always cancel the transfer manually.
todo: add specifying the subshell to use (-c).

todo: need to consolidate the bailage all over the place.
	Consistent exit codes and stderr/log messages at least.

todo: what happens if I try to clobber a file?
	(it appears zmodem refuses...  is this smart?)
todo: there's no way to preserve symlinks, etc.  Maybe use tar
	to implement an automatic archival mode?
		Wonder if we could just watch for a tarfile being catted
		to the console.  Might have to worry about escaping.
